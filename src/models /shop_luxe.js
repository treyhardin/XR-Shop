/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three/src/loaders/TextureLoader';

export default function ShopLuxe(props) {

  const group = useRef();
  const { nodes, materials } = useGLTF("/models/ShopLuxe.gltf");

  const diffuseTexture = useLoader(TextureLoader, '/textures/shop-luxe/ShopLuxe_Diffuse.png');
  diffuseTexture.flipY = false;

  const normalTexture = useLoader(TextureLoader, '/textures/shop-luxe/ShopLuxe_Normal.png');
  normalTexture.flipY = false;

  const roughnessTexture = useLoader(TextureLoader, '/textures/shop-luxe/ShopLuxe_Roughness.png');
  roughnessTexture.flipY = false;

  const emissionTexture = useLoader(TextureLoader, '/textures/shop-luxe/ShopLuxe_Emission.png');
//   emissionTexture.flipY = false;

  const lightmap = useLoader(TextureLoader, '/textures/shop-luxe/ShopLuxe_Lightmap.png');
  lightmap.flipY = false;

  let material = nodes.ShopLuxe.material;
  material.map = diffuseTexture;
  material.roughnessMap = roughnessTexture;
  material.normalMap = normalTexture;
  material.emissiveMap = emissionTexture;
  material.emissiveIntensity = 1;
  material.lightMap = lightmap;
  material.lightMapIntensity = 0.5;
  material.metalness = 0;
  material.receiveShadow = true;

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ShopLuxe.geometry}
        material={nodes.ShopLuxe.material}
        name={'shop-mesh'}
        // layers={[1, 2, 3]}
      />
    </group>
  );
}

useGLTF.preload("/Shop01.gltf");